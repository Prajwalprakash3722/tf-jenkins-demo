---
- name: Check Grafana presence and version
  hosts: grafana
  remote_user: ubuntu
  gather_facts: yes
  become: yes
  vars:
    grafana_password: admin
    grafana_version_required: "10.4.2"

  tasks:
    - name: Check if Grafana is installed
      command: grafana-server --version
      register: grafana_version_output
      ignore_errors: true

    - name: Parse Grafana version
      set_fact:
        grafana_installed_version: "{{ grafana_version_output.stdout | regex_replace('^.*([0-9]+\\.[0-9]+\\.[0-9]+).*$', '\\1') }}"
      when: grafana_version_output.stdout is defined

    - name: Install Grafana if not installed or version is lower than required
      block:
        - name: Add Grafana GPG key
          apt_key:
            url: https://packages.grafana.com/gpg.key
            state: present

        - name: Add Grafana repository
          apt_repository:
            repo: deb https://packages.grafana.com/oss/deb stable main
            state: present
            update_cache: yes

        - name: Install Grafana
          apt:
            name: grafana
            state: present

        - name: Enable and start Grafana service
          service:
            name: grafana-server
            enabled: yes
            state: started
      when: grafana_installed_version is undefined or grafana_installed_version | version_compare(grafana_version_required, '<')

    - name: Abort if Grafana is not installed or version is lower than required
      fail:
        msg: "Grafana is either not installed or the installed version is lower than required ({{ grafana_version_required }})"
      when: grafana_installed_version is undefined or grafana_installed_version | version_compare(grafana_version_required, '<')

- name: Install Grafana and configure Prometheus data source
  hosts: grafana
  remote_user: ubuntu
  gather_facts: yes
  become: yes
  vars:
    grafana_password: admin
    dashboard_files:
      - url: "https://raw.githubusercontent.com/Prajwalprakash3722/dashboards/master/nginx.json"
        dest: "/var/lib/grafana/dashboards/nginx.json"
      - url: "https://raw.githubusercontent.com/Prajwalprakash3722/dashboards/master/nginx-metrics.json"
        dest: "/var/lib/grafana/dashboards/nginx-monitoring.json"
      - url: "https://raw.githubusercontent.com/Prajwalprakash3722/dashboards/master/system.json"
        dest: "/var/lib/grafana/dashboards/system.json"

  tasks:
    - name: Get Prometheus IP address from hostvars
      set_fact:
        prometheus_ip: "{{ hostvars['prometheus']['ansible_host'] }}"
        loki_ip: "{{ hostvars['loki']['ansible_host'] }}"

    - name: Configure Prometheus data source in Grafana
      community.grafana.grafana_datasource:
        name: prometheus
        ds_type: prometheus
        ds_url: "http://{{ prometheus_ip }}:9090"
        access: proxy
        tls_skip_verify: true
        url: http://localhost:3000
        is_default: false

    - name: Configure Loki data source in Grafana
      community.grafana.grafana_datasource:
        name: loki
        ds_type: "loki"
        ds_url: "http://{{ loki_ip }}:3100"
        access: proxy
        tls_skip_verify: true
        url: http://localhost:3000
        is_default: false

    - name: Ensure the Grafana dashboard directory exists
      file:
        path: "/var/lib/grafana/dashboards"
        state: directory

    - name: Download dashboard files
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
      loop: "{{ dashboard_files }}"

    - name: Import Grafana dashboards
      community.grafana.grafana_dashboard:
        grafana_url: http://localhost:3000
        state: present
        commit_message: Updated by Ansible
        overwrite: true
        path: "{{ item.dest }}"
        validate_certs: false
      loop: "{{ dashboard_files }}"
